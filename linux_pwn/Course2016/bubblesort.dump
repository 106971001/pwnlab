
bubblesort:     file format elf32-i386


Disassembly of section .init:

00000558 <_init>:
 558:	53                   	push   %ebx
 559:	83 ec 08             	sub    $0x8,%esp
 55c:	e8 ff 00 00 00       	call   660 <__x86.get_pc_thunk.bx>
 561:	81 c3 53 1a 00 00    	add    $0x1a53,%ebx
 567:	8b 83 38 00 00 00    	mov    0x38(%ebx),%eax
 56d:	85 c0                	test   %eax,%eax
 56f:	74 05                	je     576 <_init+0x1e>
 571:	e8 6a 00 00 00       	call   5e0 <__gmon_start__@plt>
 576:	83 c4 08             	add    $0x8,%esp
 579:	5b                   	pop    %ebx
 57a:	c3                   	ret    

Disassembly of section .plt:

00000580 <fflush@plt-0x10>:
 580:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 586:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 58c:	00 00                	add    %al,(%eax)
	...

00000590 <fflush@plt>:
 590:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 596:	68 00 00 00 00       	push   $0x0
 59b:	e9 e0 ff ff ff       	jmp    580 <_init+0x28>

000005a0 <sleep@plt>:
 5a0:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 5a6:	68 08 00 00 00       	push   $0x8
 5ab:	e9 d0 ff ff ff       	jmp    580 <_init+0x28>

000005b0 <__stack_chk_fail@plt>:
 5b0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 5b6:	68 10 00 00 00       	push   $0x10
 5bb:	e9 c0 ff ff ff       	jmp    580 <_init+0x28>

000005c0 <__cxa_finalize@plt>:
 5c0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 5c6:	68 18 00 00 00       	push   $0x18
 5cb:	e9 b0 ff ff ff       	jmp    580 <_init+0x28>

000005d0 <puts@plt>:
 5d0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 5d6:	68 20 00 00 00       	push   $0x20
 5db:	e9 a0 ff ff ff       	jmp    580 <_init+0x28>

000005e0 <__gmon_start__@plt>:
 5e0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 5e6:	68 28 00 00 00       	push   $0x28
 5eb:	e9 90 ff ff ff       	jmp    580 <_init+0x28>

000005f0 <__libc_start_main@plt>:
 5f0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 5f6:	68 30 00 00 00       	push   $0x30
 5fb:	e9 80 ff ff ff       	jmp    580 <_init+0x28>

00000600 <__printf_chk@plt>:
 600:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 606:	68 38 00 00 00       	push   $0x38
 60b:	e9 70 ff ff ff       	jmp    580 <_init+0x28>

00000610 <__isoc99_scanf@plt>:
 610:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 616:	68 40 00 00 00       	push   $0x40
 61b:	e9 60 ff ff ff       	jmp    580 <_init+0x28>

Disassembly of section .text:

00000620 <_start>:
 620:	31 ed                	xor    %ebp,%ebp
 622:	5e                   	pop    %esi
 623:	89 e1                	mov    %esp,%ecx
 625:	83 e4 f0             	and    $0xfffffff0,%esp
 628:	50                   	push   %eax
 629:	54                   	push   %esp
 62a:	52                   	push   %edx
 62b:	e8 22 00 00 00       	call   652 <_start+0x32>
 630:	81 c3 84 19 00 00    	add    $0x1984,%ebx
 636:	8d 83 4c ea ff ff    	lea    -0x15b4(%ebx),%eax
 63c:	50                   	push   %eax
 63d:	8d 83 dc e9 ff ff    	lea    -0x1624(%ebx),%eax
 643:	50                   	push   %eax
 644:	51                   	push   %ecx
 645:	56                   	push   %esi
 646:	ff b3 40 00 00 00    	pushl  0x40(%ebx)
 64c:	e8 9f ff ff ff       	call   5f0 <__libc_start_main@plt>
 651:	f4                   	hlt    
 652:	8b 1c 24             	mov    (%esp),%ebx
 655:	c3                   	ret    
 656:	66 90                	xchg   %ax,%ax
 658:	66 90                	xchg   %ax,%ax
 65a:	66 90                	xchg   %ax,%ax
 65c:	66 90                	xchg   %ax,%ax
 65e:	66 90                	xchg   %ax,%ax

00000660 <__x86.get_pc_thunk.bx>:
 660:	8b 1c 24             	mov    (%esp),%ebx
 663:	c3                   	ret    
 664:	66 90                	xchg   %ax,%ax
 666:	66 90                	xchg   %ax,%ax
 668:	66 90                	xchg   %ax,%ax
 66a:	66 90                	xchg   %ax,%ax
 66c:	66 90                	xchg   %ax,%ax
 66e:	66 90                	xchg   %ax,%ax

00000670 <deregister_tm_clones>:
 670:	55                   	push   %ebp
 671:	89 e5                	mov    %esp,%ebp
 673:	53                   	push   %ebx
 674:	e8 e7 ff ff ff       	call   660 <__x86.get_pc_thunk.bx>
 679:	81 c3 3b 19 00 00    	add    $0x193b,%ebx
 67f:	83 ec 14             	sub    $0x14,%esp
 682:	8d 83 57 00 00 00    	lea    0x57(%ebx),%eax
 688:	8d 93 54 00 00 00    	lea    0x54(%ebx),%edx
 68e:	29 d0                	sub    %edx,%eax
 690:	83 f8 06             	cmp    $0x6,%eax
 693:	77 06                	ja     69b <deregister_tm_clones+0x2b>
 695:	83 c4 14             	add    $0x14,%esp
 698:	5b                   	pop    %ebx
 699:	5d                   	pop    %ebp
 69a:	c3                   	ret    
 69b:	8b 83 30 00 00 00    	mov    0x30(%ebx),%eax
 6a1:	85 c0                	test   %eax,%eax
 6a3:	74 f0                	je     695 <deregister_tm_clones+0x25>
 6a5:	89 14 24             	mov    %edx,(%esp)
 6a8:	ff d0                	call   *%eax
 6aa:	eb e9                	jmp    695 <deregister_tm_clones+0x25>
 6ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000006b0 <register_tm_clones>:
 6b0:	55                   	push   %ebp
 6b1:	89 e5                	mov    %esp,%ebp
 6b3:	53                   	push   %ebx
 6b4:	e8 a7 ff ff ff       	call   660 <__x86.get_pc_thunk.bx>
 6b9:	81 c3 fb 18 00 00    	add    $0x18fb,%ebx
 6bf:	83 ec 14             	sub    $0x14,%esp
 6c2:	8d 83 54 00 00 00    	lea    0x54(%ebx),%eax
 6c8:	8d 93 54 00 00 00    	lea    0x54(%ebx),%edx
 6ce:	29 d0                	sub    %edx,%eax
 6d0:	c1 f8 02             	sar    $0x2,%eax
 6d3:	89 c1                	mov    %eax,%ecx
 6d5:	c1 e9 1f             	shr    $0x1f,%ecx
 6d8:	01 c8                	add    %ecx,%eax
 6da:	d1 f8                	sar    %eax
 6dc:	75 06                	jne    6e4 <register_tm_clones+0x34>
 6de:	83 c4 14             	add    $0x14,%esp
 6e1:	5b                   	pop    %ebx
 6e2:	5d                   	pop    %ebp
 6e3:	c3                   	ret    
 6e4:	8b 8b 48 00 00 00    	mov    0x48(%ebx),%ecx
 6ea:	85 c9                	test   %ecx,%ecx
 6ec:	74 f0                	je     6de <register_tm_clones+0x2e>
 6ee:	89 44 24 04          	mov    %eax,0x4(%esp)
 6f2:	89 14 24             	mov    %edx,(%esp)
 6f5:	ff d1                	call   *%ecx
 6f7:	eb e5                	jmp    6de <register_tm_clones+0x2e>
 6f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00000700 <__do_global_dtors_aux>:
 700:	55                   	push   %ebp
 701:	89 e5                	mov    %esp,%ebp
 703:	53                   	push   %ebx
 704:	e8 57 ff ff ff       	call   660 <__x86.get_pc_thunk.bx>
 709:	81 c3 ab 18 00 00    	add    $0x18ab,%ebx
 70f:	83 ec 14             	sub    $0x14,%esp
 712:	80 bb 54 00 00 00 00 	cmpb   $0x0,0x54(%ebx)
 719:	75 24                	jne    73f <__do_global_dtors_aux+0x3f>
 71b:	8b 83 34 00 00 00    	mov    0x34(%ebx),%eax
 721:	85 c0                	test   %eax,%eax
 723:	74 0e                	je     733 <__do_global_dtors_aux+0x33>
 725:	8b 83 50 00 00 00    	mov    0x50(%ebx),%eax
 72b:	89 04 24             	mov    %eax,(%esp)
 72e:	e8 8d fe ff ff       	call   5c0 <__cxa_finalize@plt>
 733:	e8 38 ff ff ff       	call   670 <deregister_tm_clones>
 738:	c6 83 54 00 00 00 01 	movb   $0x1,0x54(%ebx)
 73f:	83 c4 14             	add    $0x14,%esp
 742:	5b                   	pop    %ebx
 743:	5d                   	pop    %ebp
 744:	c3                   	ret    
 745:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000750 <frame_dummy>:
 750:	55                   	push   %ebp
 751:	89 e5                	mov    %esp,%ebp
 753:	53                   	push   %ebx
 754:	e8 07 ff ff ff       	call   660 <__x86.get_pc_thunk.bx>
 759:	81 c3 5b 18 00 00    	add    $0x185b,%ebx
 75f:	83 ec 14             	sub    $0x14,%esp
 762:	8b 83 04 ff ff ff    	mov    -0xfc(%ebx),%eax
 768:	85 c0                	test   %eax,%eax
 76a:	74 15                	je     781 <frame_dummy+0x31>
 76c:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 772:	85 c0                	test   %eax,%eax
 774:	74 0b                	je     781 <frame_dummy+0x31>
 776:	8d 93 04 ff ff ff    	lea    -0xfc(%ebx),%edx
 77c:	89 14 24             	mov    %edx,(%esp)
 77f:	ff d0                	call   *%eax
 781:	83 c4 14             	add    $0x14,%esp
 784:	5b                   	pop    %ebx
 785:	5d                   	pop    %ebp
 786:	e9 25 ff ff ff       	jmp    6b0 <register_tm_clones>

0000078b <main>:
 78b:	55                   	push   %ebp
 78c:	89 e5                	mov    %esp,%ebp
 78e:	57                   	push   %edi
 78f:	56                   	push   %esi
 790:	53                   	push   %ebx
 791:	83 e4 f0             	and    $0xfffffff0,%esp
 794:	83 ec 40             	sub    $0x40,%esp
 797:	e8 c4 fe ff ff       	call   660 <__x86.get_pc_thunk.bx>
 79c:	81 c3 18 18 00 00    	add    $0x1818,%ebx
 7a2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 7a8:	89 44 24 3c          	mov    %eax,0x3c(%esp)
 7ac:	31 c0                	xor    %eax,%eax
 7ae:	8d 83 8c ea ff ff    	lea    -0x1574(%ebx),%eax
 7b4:	89 04 24             	mov    %eax,(%esp)
 7b7:	e8 14 fe ff ff       	call   5d0 <puts@plt>
 7bc:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 7c2:	8b 00                	mov    (%eax),%eax
 7c4:	89 04 24             	mov    %eax,(%esp)
 7c7:	e8 c4 fd ff ff       	call   590 <fflush@plt>
 7cc:	8d 44 24 14          	lea    0x14(%esp),%eax
 7d0:	89 44 24 04          	mov    %eax,0x4(%esp)
 7d4:	8d 83 ac ea ff ff    	lea    -0x1554(%ebx),%eax
 7da:	89 04 24             	mov    %eax,(%esp)
 7dd:	e8 2e fe ff ff       	call   610 <__isoc99_scanf@plt>
 7e2:	83 7c 24 14 00       	cmpl   $0x0,0x14(%esp)
 7e7:	74 51                	je     83a <main+0xaf>
 7e9:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
 7ed:	be 00 00 00 00       	mov    $0x0,%esi
 7f2:	89 74 24 08          	mov    %esi,0x8(%esp)
 7f6:	8d 83 af ea ff ff    	lea    -0x1551(%ebx),%eax
 7fc:	89 44 24 04          	mov    %eax,0x4(%esp)
 800:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 807:	e8 f4 fd ff ff       	call   600 <__printf_chk@plt>
 80c:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 812:	8b 00                	mov    (%eax),%eax
 814:	89 04 24             	mov    %eax,(%esp)
 817:	e8 74 fd ff ff       	call   590 <fflush@plt>
 81c:	89 7c 24 04          	mov    %edi,0x4(%esp)
 820:	8d 83 ac ea ff ff    	lea    -0x1554(%ebx),%eax
 826:	89 04 24             	mov    %eax,(%esp)
 829:	e8 e2 fd ff ff       	call   610 <__isoc99_scanf@plt>
 82e:	83 c6 01             	add    $0x1,%esi
 831:	83 c7 04             	add    $0x4,%edi
 834:	39 74 24 14          	cmp    %esi,0x14(%esp)
 838:	77 b8                	ja     7f2 <main+0x67>
 83a:	8d 83 c6 ea ff ff    	lea    -0x153a(%ebx),%eax
 840:	89 04 24             	mov    %eax,(%esp)
 843:	e8 88 fd ff ff       	call   5d0 <puts@plt>
 848:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 84f:	e8 4c fd ff ff       	call   5a0 <sleep@plt>
 854:	8b 44 24 14          	mov    0x14(%esp),%eax
 858:	85 c0                	test   %eax,%eax
 85a:	74 4a                	je     8a6 <main+0x11b>
 85c:	8b 7c 24 18          	mov    0x18(%esp),%edi
 860:	8d 48 ff             	lea    -0x1(%eax),%ecx
 863:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
 867:	8d 74 84 1c          	lea    0x1c(%esp,%eax,4),%esi
 86b:	eb 2c                	jmp    899 <main+0x10e>
 86d:	8b 10                	mov    (%eax),%edx
 86f:	8b 48 04             	mov    0x4(%eax),%ecx
 872:	39 ca                	cmp    %ecx,%edx
 874:	76 07                	jbe    87d <main+0xf2>
 876:	89 08                	mov    %ecx,(%eax)
 878:	89 50 04             	mov    %edx,0x4(%eax)
 87b:	89 d7                	mov    %edx,%edi
 87d:	83 c0 04             	add    $0x4,%eax
 880:	39 f0                	cmp    %esi,%eax
 882:	75 e9                	jne    86d <main+0xe2>
 884:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%esp)
 889:	75 06                	jne    891 <main+0x106>
 88b:	89 7c 24 18          	mov    %edi,0x18(%esp)
 88f:	eb 15                	jmp    8a6 <main+0x11b>
 891:	83 6c 24 0c 01       	subl   $0x1,0xc(%esp)
 896:	83 ee 04             	sub    $0x4,%esi
 899:	83 7c 24 0c ff       	cmpl   $0xffffffff,0xc(%esp)
 89e:	74 f1                	je     891 <main+0x106>
 8a0:	8d 44 24 1c          	lea    0x1c(%esp),%eax
 8a4:	eb c7                	jmp    86d <main+0xe2>
 8a6:	8d 83 d7 ea ff ff    	lea    -0x1529(%ebx),%eax
 8ac:	89 04 24             	mov    %eax,(%esp)
 8af:	e8 1c fd ff ff       	call   5d0 <puts@plt>
 8b4:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 8ba:	8b 00                	mov    (%eax),%eax
 8bc:	89 04 24             	mov    %eax,(%esp)
 8bf:	e8 cc fc ff ff       	call   590 <fflush@plt>
 8c4:	83 7c 24 14 00       	cmpl   $0x0,0x14(%esp)
 8c9:	74 2c                	je     8f7 <main+0x16c>
 8cb:	be 00 00 00 00       	mov    $0x0,%esi
 8d0:	8d bb e0 ea ff ff    	lea    -0x1520(%ebx),%edi
 8d6:	8b 44 b4 1c          	mov    0x1c(%esp,%esi,4),%eax
 8da:	89 44 24 08          	mov    %eax,0x8(%esp)
 8de:	89 7c 24 04          	mov    %edi,0x4(%esp)
 8e2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8e9:	e8 12 fd ff ff       	call   600 <__printf_chk@plt>
 8ee:	83 c6 01             	add    $0x1,%esi
 8f1:	39 74 24 14          	cmp    %esi,0x14(%esp)
 8f5:	77 df                	ja     8d6 <main+0x14b>
 8f7:	8d 83 c5 ea ff ff    	lea    -0x153b(%ebx),%eax
 8fd:	89 04 24             	mov    %eax,(%esp)
 900:	e8 cb fc ff ff       	call   5d0 <puts@plt>
 905:	8d 83 e4 ea ff ff    	lea    -0x151c(%ebx),%eax
 90b:	89 04 24             	mov    %eax,(%esp)
 90e:	e8 bd fc ff ff       	call   5d0 <puts@plt>
 913:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 919:	8b 00                	mov    (%eax),%eax
 91b:	89 04 24             	mov    %eax,(%esp)
 91e:	e8 6d fc ff ff       	call   590 <fflush@plt>
 923:	8d 44 24 18          	lea    0x18(%esp),%eax
 927:	89 44 24 04          	mov    %eax,0x4(%esp)
 92b:	8d 83 ac ea ff ff    	lea    -0x1554(%ebx),%eax
 931:	89 04 24             	mov    %eax,(%esp)
 934:	e8 d7 fc ff ff       	call   610 <__isoc99_scanf@plt>
 939:	83 7c 24 18 01       	cmpl   $0x1,0x18(%esp)
 93e:	0f 84 6a fe ff ff    	je     7ae <main+0x23>
 944:	8d 83 fc ea ff ff    	lea    -0x1504(%ebx),%eax
 94a:	89 04 24             	mov    %eax,(%esp)
 94d:	e8 7e fc ff ff       	call   5d0 <puts@plt>
 952:	8b 83 3c 00 00 00    	mov    0x3c(%ebx),%eax
 958:	8b 00                	mov    (%eax),%eax
 95a:	89 04 24             	mov    %eax,(%esp)
 95d:	e8 2e fc ff ff       	call   590 <fflush@plt>
 962:	b8 00 00 00 00       	mov    $0x0,%eax
 967:	8b 7c 24 3c          	mov    0x3c(%esp),%edi
 96b:	65 33 3d 14 00 00 00 	xor    %gs:0x14,%edi
 972:	74 05                	je     979 <main+0x1ee>
 974:	e8 97 00 00 00       	call   a10 <__stack_chk_fail_local>
 979:	8d 65 f4             	lea    -0xc(%ebp),%esp
 97c:	5b                   	pop    %ebx
 97d:	5e                   	pop    %esi
 97e:	5f                   	pop    %edi
 97f:	5d                   	pop    %ebp
 980:	c3                   	ret    
 981:	66 90                	xchg   %ax,%ax
 983:	66 90                	xchg   %ax,%ax
 985:	66 90                	xchg   %ax,%ax
 987:	66 90                	xchg   %ax,%ax
 989:	66 90                	xchg   %ax,%ax
 98b:	66 90                	xchg   %ax,%ax
 98d:	66 90                	xchg   %ax,%ax
 98f:	90                   	nop

00000990 <__libc_csu_init>:
 990:	55                   	push   %ebp
 991:	57                   	push   %edi
 992:	31 ff                	xor    %edi,%edi
 994:	56                   	push   %esi
 995:	53                   	push   %ebx
 996:	e8 c5 fc ff ff       	call   660 <__x86.get_pc_thunk.bx>
 99b:	81 c3 19 16 00 00    	add    $0x1619,%ebx
 9a1:	83 ec 1c             	sub    $0x1c,%esp
 9a4:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 9a8:	8d b3 00 ff ff ff    	lea    -0x100(%ebx),%esi
 9ae:	e8 a5 fb ff ff       	call   558 <_init>
 9b3:	8d 83 fc fe ff ff    	lea    -0x104(%ebx),%eax
 9b9:	29 c6                	sub    %eax,%esi
 9bb:	c1 fe 02             	sar    $0x2,%esi
 9be:	85 f6                	test   %esi,%esi
 9c0:	74 27                	je     9e9 <__libc_csu_init+0x59>
 9c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 9c8:	8b 44 24 38          	mov    0x38(%esp),%eax
 9cc:	89 2c 24             	mov    %ebp,(%esp)
 9cf:	89 44 24 08          	mov    %eax,0x8(%esp)
 9d3:	8b 44 24 34          	mov    0x34(%esp),%eax
 9d7:	89 44 24 04          	mov    %eax,0x4(%esp)
 9db:	ff 94 bb fc fe ff ff 	call   *-0x104(%ebx,%edi,4)
 9e2:	83 c7 01             	add    $0x1,%edi
 9e5:	39 f7                	cmp    %esi,%edi
 9e7:	75 df                	jne    9c8 <__libc_csu_init+0x38>
 9e9:	83 c4 1c             	add    $0x1c,%esp
 9ec:	5b                   	pop    %ebx
 9ed:	5e                   	pop    %esi
 9ee:	5f                   	pop    %edi
 9ef:	5d                   	pop    %ebp
 9f0:	c3                   	ret    
 9f1:	eb 0d                	jmp    a00 <__libc_csu_fini>
 9f3:	90                   	nop
 9f4:	90                   	nop
 9f5:	90                   	nop
 9f6:	90                   	nop
 9f7:	90                   	nop
 9f8:	90                   	nop
 9f9:	90                   	nop
 9fa:	90                   	nop
 9fb:	90                   	nop
 9fc:	90                   	nop
 9fd:	90                   	nop
 9fe:	90                   	nop
 9ff:	90                   	nop

00000a00 <__libc_csu_fini>:
 a00:	f3 c3                	repz ret 
 a02:	66 90                	xchg   %ax,%ax
 a04:	66 90                	xchg   %ax,%ax
 a06:	66 90                	xchg   %ax,%ax
 a08:	66 90                	xchg   %ax,%ax
 a0a:	66 90                	xchg   %ax,%ax
 a0c:	66 90                	xchg   %ax,%ax
 a0e:	66 90                	xchg   %ax,%ax

00000a10 <__stack_chk_fail_local>:
 a10:	53                   	push   %ebx
 a11:	e8 4a fc ff ff       	call   660 <__x86.get_pc_thunk.bx>
 a16:	81 c3 9e 15 00 00    	add    $0x159e,%ebx
 a1c:	83 ec 08             	sub    $0x8,%esp
 a1f:	e8 8c fb ff ff       	call   5b0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000a24 <_fini>:
 a24:	53                   	push   %ebx
 a25:	83 ec 08             	sub    $0x8,%esp
 a28:	e8 33 fc ff ff       	call   660 <__x86.get_pc_thunk.bx>
 a2d:	81 c3 87 15 00 00    	add    $0x1587,%ebx
 a33:	83 c4 08             	add    $0x8,%esp
 a36:	5b                   	pop    %ebx
 a37:	c3                   	ret    
