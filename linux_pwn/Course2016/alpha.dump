
alpha:     file format elf32-i386


Disassembly of section .init:

080483e8 <_init>:
 80483e8:	53                   	push   %ebx
 80483e9:	83 ec 08             	sub    $0x8,%esp
 80483ec:	e8 df 00 00 00       	call   80484d0 <__x86.get_pc_thunk.bx>
 80483f1:	81 c3 0f 1c 00 00    	add    $0x1c0f,%ebx
 80483f7:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483fd:	85 c0                	test   %eax,%eax
 80483ff:	74 05                	je     8048406 <_init+0x1e>
 8048401:	e8 4a 00 00 00       	call   8048450 <__gmon_start__@plt>
 8048406:	83 c4 08             	add    $0x8,%esp
 8048409:	5b                   	pop    %ebx
 804840a:	c3                   	ret    

Disassembly of section .plt:

08048410 <fgets@plt-0x10>:
 8048410:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048416:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804841c:	00 00                	add    %al,(%eax)
	...

08048420 <fgets@plt>:
 8048420:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048426:	68 00 00 00 00       	push   $0x0
 804842b:	e9 e0 ff ff ff       	jmp    8048410 <_init+0x28>

08048430 <__stack_chk_fail@plt>:
 8048430:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048436:	68 08 00 00 00       	push   $0x8
 804843b:	e9 d0 ff ff ff       	jmp    8048410 <_init+0x28>

08048440 <fwrite@plt>:
 8048440:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048446:	68 10 00 00 00       	push   $0x10
 804844b:	e9 c0 ff ff ff       	jmp    8048410 <_init+0x28>

08048450 <__gmon_start__@plt>:
 8048450:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048456:	68 18 00 00 00       	push   $0x18
 804845b:	e9 b0 ff ff ff       	jmp    8048410 <_init+0x28>

08048460 <strchr@plt>:
 8048460:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048466:	68 20 00 00 00       	push   $0x20
 804846b:	e9 a0 ff ff ff       	jmp    8048410 <_init+0x28>

08048470 <strlen@plt>:
 8048470:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048476:	68 28 00 00 00       	push   $0x28
 804847b:	e9 90 ff ff ff       	jmp    8048410 <_init+0x28>

08048480 <__libc_start_main@plt>:
 8048480:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048486:	68 30 00 00 00       	push   $0x30
 804848b:	e9 80 ff ff ff       	jmp    8048410 <_init+0x28>

08048490 <__ctype_b_loc@plt>:
 8048490:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048496:	68 38 00 00 00       	push   $0x38
 804849b:	e9 70 ff ff ff       	jmp    8048410 <_init+0x28>

Disassembly of section .text:

080484a0 <_start>:
 80484a0:	31 ed                	xor    %ebp,%ebp
 80484a2:	5e                   	pop    %esi
 80484a3:	89 e1                	mov    %esp,%ecx
 80484a5:	83 e4 f0             	and    $0xfffffff0,%esp
 80484a8:	50                   	push   %eax
 80484a9:	54                   	push   %esp
 80484aa:	52                   	push   %edx
 80484ab:	68 80 87 04 08       	push   $0x8048780
 80484b0:	68 10 87 04 08       	push   $0x8048710
 80484b5:	51                   	push   %ecx
 80484b6:	56                   	push   %esi
 80484b7:	68 9d 85 04 08       	push   $0x804859d
 80484bc:	e8 bf ff ff ff       	call   8048480 <__libc_start_main@plt>
 80484c1:	f4                   	hlt    
 80484c2:	66 90                	xchg   %ax,%ax
 80484c4:	66 90                	xchg   %ax,%ax
 80484c6:	66 90                	xchg   %ax,%ax
 80484c8:	66 90                	xchg   %ax,%ax
 80484ca:	66 90                	xchg   %ax,%ax
 80484cc:	66 90                	xchg   %ax,%ax
 80484ce:	66 90                	xchg   %ax,%ax

080484d0 <__x86.get_pc_thunk.bx>:
 80484d0:	8b 1c 24             	mov    (%esp),%ebx
 80484d3:	c3                   	ret    
 80484d4:	66 90                	xchg   %ax,%ax
 80484d6:	66 90                	xchg   %ax,%ax
 80484d8:	66 90                	xchg   %ax,%ax
 80484da:	66 90                	xchg   %ax,%ax
 80484dc:	66 90                	xchg   %ax,%ax
 80484de:	66 90                	xchg   %ax,%ax

080484e0 <deregister_tm_clones>:
 80484e0:	b8 37 a0 04 08       	mov    $0x804a037,%eax
 80484e5:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 80484ea:	83 f8 06             	cmp    $0x6,%eax
 80484ed:	77 01                	ja     80484f0 <deregister_tm_clones+0x10>
 80484ef:	c3                   	ret    
 80484f0:	b8 00 00 00 00       	mov    $0x0,%eax
 80484f5:	85 c0                	test   %eax,%eax
 80484f7:	74 f6                	je     80484ef <deregister_tm_clones+0xf>
 80484f9:	55                   	push   %ebp
 80484fa:	89 e5                	mov    %esp,%ebp
 80484fc:	83 ec 18             	sub    $0x18,%esp
 80484ff:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048506:	ff d0                	call   *%eax
 8048508:	c9                   	leave  
 8048509:	c3                   	ret    
 804850a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048510 <register_tm_clones>:
 8048510:	b8 34 a0 04 08       	mov    $0x804a034,%eax
 8048515:	2d 34 a0 04 08       	sub    $0x804a034,%eax
 804851a:	c1 f8 02             	sar    $0x2,%eax
 804851d:	89 c2                	mov    %eax,%edx
 804851f:	c1 ea 1f             	shr    $0x1f,%edx
 8048522:	01 d0                	add    %edx,%eax
 8048524:	d1 f8                	sar    %eax
 8048526:	75 01                	jne    8048529 <register_tm_clones+0x19>
 8048528:	c3                   	ret    
 8048529:	ba 00 00 00 00       	mov    $0x0,%edx
 804852e:	85 d2                	test   %edx,%edx
 8048530:	74 f6                	je     8048528 <register_tm_clones+0x18>
 8048532:	55                   	push   %ebp
 8048533:	89 e5                	mov    %esp,%ebp
 8048535:	83 ec 18             	sub    $0x18,%esp
 8048538:	89 44 24 04          	mov    %eax,0x4(%esp)
 804853c:	c7 04 24 34 a0 04 08 	movl   $0x804a034,(%esp)
 8048543:	ff d2                	call   *%edx
 8048545:	c9                   	leave  
 8048546:	c3                   	ret    
 8048547:	89 f6                	mov    %esi,%esi
 8048549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048550 <__do_global_dtors_aux>:
 8048550:	80 3d 3c a0 04 08 00 	cmpb   $0x0,0x804a03c
 8048557:	75 13                	jne    804856c <__do_global_dtors_aux+0x1c>
 8048559:	55                   	push   %ebp
 804855a:	89 e5                	mov    %esp,%ebp
 804855c:	83 ec 08             	sub    $0x8,%esp
 804855f:	e8 7c ff ff ff       	call   80484e0 <deregister_tm_clones>
 8048564:	c6 05 3c a0 04 08 01 	movb   $0x1,0x804a03c
 804856b:	c9                   	leave  
 804856c:	f3 c3                	repz ret 
 804856e:	66 90                	xchg   %ax,%ax

08048570 <frame_dummy>:
 8048570:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048575:	85 c0                	test   %eax,%eax
 8048577:	74 1f                	je     8048598 <frame_dummy+0x28>
 8048579:	b8 00 00 00 00       	mov    $0x0,%eax
 804857e:	85 c0                	test   %eax,%eax
 8048580:	74 16                	je     8048598 <frame_dummy+0x28>
 8048582:	55                   	push   %ebp
 8048583:	89 e5                	mov    %esp,%ebp
 8048585:	83 ec 18             	sub    $0x18,%esp
 8048588:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804858f:	ff d0                	call   *%eax
 8048591:	c9                   	leave  
 8048592:	e9 79 ff ff ff       	jmp    8048510 <register_tm_clones>
 8048597:	90                   	nop
 8048598:	e9 73 ff ff ff       	jmp    8048510 <register_tm_clones>

0804859d <main>:
 804859d:	55                   	push   %ebp
 804859e:	89 e5                	mov    %esp,%ebp
 80485a0:	56                   	push   %esi
 80485a1:	53                   	push   %ebx
 80485a2:	83 e4 f0             	and    $0xfffffff0,%esp
 80485a5:	81 ec 30 10 00 00    	sub    $0x1030,%esp
 80485ab:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485ae:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 80485b2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80485b8:	89 84 24 2c 10 00 00 	mov    %eax,0x102c(%esp)
 80485bf:	31 c0                	xor    %eax,%eax
 80485c1:	a1 34 a0 04 08       	mov    0x804a034,%eax
 80485c6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80485ca:	c7 44 24 08 6f 00 00 	movl   $0x6f,0x8(%esp)
 80485d1:	00 
 80485d2:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80485d9:	00 
 80485da:	c7 04 24 a0 87 04 08 	movl   $0x80487a0,(%esp)
 80485e1:	e8 5a fe ff ff       	call   8048440 <fwrite@plt>
 80485e6:	a1 34 a0 04 08       	mov    0x804a034,%eax
 80485eb:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80485ef:	c7 44 24 08 1d 00 00 	movl   $0x1d,0x8(%esp)
 80485f6:	00 
 80485f7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80485fe:	00 
 80485ff:	c7 04 24 10 88 04 08 	movl   $0x8048810,(%esp)
 8048606:	e8 35 fe ff ff       	call   8048440 <fwrite@plt>
 804860b:	a1 38 a0 04 08       	mov    0x804a038,%eax
 8048610:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048614:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 804861b:	00 
 804861c:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 8048620:	89 04 24             	mov    %eax,(%esp)
 8048623:	e8 f8 fd ff ff       	call   8048420 <fgets@plt>
 8048628:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 804862c:	89 04 24             	mov    %eax,(%esp)
 804862f:	e8 3c fe ff ff       	call   8048470 <strlen@plt>
 8048634:	83 e8 01             	sub    $0x1,%eax
 8048637:	c6 44 04 2c 00       	movb   $0x0,0x2c(%esp,%eax,1)
 804863c:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 8048643:	00 
 8048644:	eb 7d                	jmp    80486c3 <main+0x126>
 8048646:	e8 45 fe ff ff       	call   8048490 <__ctype_b_loc@plt>
 804864b:	8b 00                	mov    (%eax),%eax
 804864d:	8d 4c 24 2c          	lea    0x2c(%esp),%ecx
 8048651:	8b 54 24 28          	mov    0x28(%esp),%edx
 8048655:	01 ca                	add    %ecx,%edx
 8048657:	0f b6 12             	movzbl (%edx),%edx
 804865a:	0f be d2             	movsbl %dl,%edx
 804865d:	01 d2                	add    %edx,%edx
 804865f:	01 d0                	add    %edx,%eax
 8048661:	0f b7 00             	movzwl (%eax),%eax
 8048664:	0f b7 c0             	movzwl %ax,%eax
 8048667:	83 e0 08             	and    $0x8,%eax
 804866a:	85 c0                	test   %eax,%eax
 804866c:	74 24                	je     8048692 <main+0xf5>
 804866e:	8d 54 24 2c          	lea    0x2c(%esp),%edx
 8048672:	8b 44 24 28          	mov    0x28(%esp),%eax
 8048676:	01 d0                	add    %edx,%eax
 8048678:	0f b6 00             	movzbl (%eax),%eax
 804867b:	0f be c0             	movsbl %al,%eax
 804867e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048682:	c7 04 24 2e 88 04 08 	movl   $0x804882e,(%esp)
 8048689:	e8 d2 fd ff ff       	call   8048460 <strchr@plt>
 804868e:	85 c0                	test   %eax,%eax
 8048690:	74 2c                	je     80486be <main+0x121>
 8048692:	a1 34 a0 04 08       	mov    0x804a034,%eax
 8048697:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804869b:	c7 44 24 08 19 00 00 	movl   $0x19,0x8(%esp)
 80486a2:	00 
 80486a3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80486aa:	00 
 80486ab:	c7 04 24 39 88 04 08 	movl   $0x8048839,(%esp)
 80486b2:	e8 89 fd ff ff       	call   8048440 <fwrite@plt>
 80486b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 80486bc:	eb 28                	jmp    80486e6 <main+0x149>
 80486be:	83 44 24 28 01       	addl   $0x1,0x28(%esp)
 80486c3:	8b 5c 24 28          	mov    0x28(%esp),%ebx
 80486c7:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 80486cb:	89 04 24             	mov    %eax,(%esp)
 80486ce:	e8 9d fd ff ff       	call   8048470 <strlen@plt>
 80486d3:	39 c3                	cmp    %eax,%ebx
 80486d5:	0f 82 6b ff ff ff    	jb     8048646 <main+0xa9>
 80486db:	8d 44 24 2c          	lea    0x2c(%esp),%eax
 80486df:	ff d0                	call   *%eax
 80486e1:	b8 00 00 00 00       	mov    $0x0,%eax
 80486e6:	8b b4 24 2c 10 00 00 	mov    0x102c(%esp),%esi
 80486ed:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
 80486f4:	74 05                	je     80486fb <main+0x15e>
 80486f6:	e8 35 fd ff ff       	call   8048430 <__stack_chk_fail@plt>
 80486fb:	8d 65 f8             	lea    -0x8(%ebp),%esp
 80486fe:	5b                   	pop    %ebx
 80486ff:	5e                   	pop    %esi
 8048700:	5d                   	pop    %ebp
 8048701:	c3                   	ret    
 8048702:	66 90                	xchg   %ax,%ax
 8048704:	66 90                	xchg   %ax,%ax
 8048706:	66 90                	xchg   %ax,%ax
 8048708:	66 90                	xchg   %ax,%ax
 804870a:	66 90                	xchg   %ax,%ax
 804870c:	66 90                	xchg   %ax,%ax
 804870e:	66 90                	xchg   %ax,%ax

08048710 <__libc_csu_init>:
 8048710:	55                   	push   %ebp
 8048711:	57                   	push   %edi
 8048712:	31 ff                	xor    %edi,%edi
 8048714:	56                   	push   %esi
 8048715:	53                   	push   %ebx
 8048716:	e8 b5 fd ff ff       	call   80484d0 <__x86.get_pc_thunk.bx>
 804871b:	81 c3 e5 18 00 00    	add    $0x18e5,%ebx
 8048721:	83 ec 1c             	sub    $0x1c,%esp
 8048724:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048728:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804872e:	e8 b5 fc ff ff       	call   80483e8 <_init>
 8048733:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048739:	29 c6                	sub    %eax,%esi
 804873b:	c1 fe 02             	sar    $0x2,%esi
 804873e:	85 f6                	test   %esi,%esi
 8048740:	74 27                	je     8048769 <__libc_csu_init+0x59>
 8048742:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048748:	8b 44 24 38          	mov    0x38(%esp),%eax
 804874c:	89 2c 24             	mov    %ebp,(%esp)
 804874f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048753:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048757:	89 44 24 04          	mov    %eax,0x4(%esp)
 804875b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048762:	83 c7 01             	add    $0x1,%edi
 8048765:	39 f7                	cmp    %esi,%edi
 8048767:	75 df                	jne    8048748 <__libc_csu_init+0x38>
 8048769:	83 c4 1c             	add    $0x1c,%esp
 804876c:	5b                   	pop    %ebx
 804876d:	5e                   	pop    %esi
 804876e:	5f                   	pop    %edi
 804876f:	5d                   	pop    %ebp
 8048770:	c3                   	ret    
 8048771:	eb 0d                	jmp    8048780 <__libc_csu_fini>
 8048773:	90                   	nop
 8048774:	90                   	nop
 8048775:	90                   	nop
 8048776:	90                   	nop
 8048777:	90                   	nop
 8048778:	90                   	nop
 8048779:	90                   	nop
 804877a:	90                   	nop
 804877b:	90                   	nop
 804877c:	90                   	nop
 804877d:	90                   	nop
 804877e:	90                   	nop
 804877f:	90                   	nop

08048780 <__libc_csu_fini>:
 8048780:	f3 c3                	repz ret 

Disassembly of section .fini:

08048784 <_fini>:
 8048784:	53                   	push   %ebx
 8048785:	83 ec 08             	sub    $0x8,%esp
 8048788:	e8 43 fd ff ff       	call   80484d0 <__x86.get_pc_thunk.bx>
 804878d:	81 c3 73 18 00 00    	add    $0x1873,%ebx
 8048793:	83 c4 08             	add    $0x8,%esp
 8048796:	5b                   	pop    %ebx
 8048797:	c3                   	ret    
